name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Allow manual triggering

env:
  PYTHON_VERSION: '3.11'
  APP_NAME: 'GooglePhotosDownloader'

jobs:
  build:
    name: Build ${{ matrix.os }} Executable
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: GooglePhotosDownloader-Windows.exe
            build_command: pyinstaller --onefile --windowed --name GooglePhotosDownloader --icon assets/icon.ico src/google_photos_downloader.py
          - os: macos-latest
            artifact_name: GooglePhotosDownloader-macOS
            build_command: pyinstaller --onefile --windowed --name GooglePhotosDownloader src/google_photos_downloader.py
          - os: ubuntu-latest
            artifact_name: GooglePhotosDownloader-Linux
            build_command: pyinstaller --onefile --name GooglePhotosDownloader src/google_photos_downloader.py

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v5

      - name: 🐍 Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install pyinstaller

      - name: 🎨 Create Application Icon
        run: |
          python -c "
          from PIL import Image, ImageDraw
          import os
          os.makedirs('assets', exist_ok=True)
          if not os.path.exists('assets/icon.ico'):
              img = Image.new('RGBA', (64, 64), (70, 130, 180, 255))
              draw = ImageDraw.Draw(img)
              draw.rectangle([10, 20, 54, 50], fill=(255, 255, 255, 255), outline=(0, 0, 0, 255), width=2)
              draw.ellipse([20, 25, 44, 45], fill=(200, 200, 200, 255), outline=(0, 0, 0, 255), width=2)
              draw.ellipse([26, 29, 38, 41], fill=(100, 100, 100, 255))
              draw.rectangle([45, 15, 50, 20], fill=(255, 255, 0, 255))
              img.save('assets/icon.ico', format='ICO', sizes=[(64, 64), (32, 32), (16, 16)])
              print('✅ Created application icon')
          "

      - name: 🔨 Build Executable
        run: ${{ matrix.build_command }}

      - name: 📦 Prepare Artifact
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist/GooglePhotosDownloader.exe dist/${{ matrix.artifact_name }}
          else
            mv dist/GooglePhotosDownloader dist/${{ matrix.artifact_name }}
            chmod +x dist/${{ matrix.artifact_name }}
          fi

      - name: ⬆️ Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.artifact_name }}

  release:
    name: 🚀 Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v5

      - name: 📥 Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets/

      - name: 📦 Prepare Release Assets
        run: |
          mkdir -p dist/
          find release-assets/ -name "GooglePhotosDownloader*" -exec cp {} dist/ \;
          ls -la dist/

      - name: 🏷️ Extract Version Info
        id: version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${TAG_NAME#v}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: 🎉 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag_name }}
          name: "Google Photos Downloader ${{ steps.version.outputs.tag_name }}"
          body: |
            # Google Photos Downloader ${{ steps.version.outputs.tag_name }}
            
            ## 📥 Downloads
            
            - **Windows**: `GooglePhotosDownloader-Windows.exe`
            - **macOS**: `GooglePhotosDownloader-macOS`  
            - **Linux**: `GooglePhotosDownloader-Linux`
            
            ## 🚀 Quick Start
            
            1. Download executable for your platform
            2. Set up Google API credentials (see README)
            3. Run application and authenticate via browser
            4. Select date range and download!
            
            See [README](https://github.com/${{ github.repository }}/blob/main/README.md) for full setup instructions.
          files: |
            dist/GooglePhotosDownloader-Windows.exe
            dist/GooglePhotosDownloader-macOS
            dist/GooglePhotosDownloader-Linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
